pipeline {
    agent any
    parameters {
        string(name: 'testXml', defaultValue: 'regress', description: 'enter xml file')
        string(name: 'thread', defaultValue: '1', description: 'thread count')
        choice(name: 'browser', choices: ['chrome', 'firefox', 'edge'], description: 'choice browser')
    }
     stages {
            stage('start Selenoid') {
                steps {
                        powershell 'docker pull selenoid/chrome:109.0'
                        powershell 'docker pull selenoid/firefox:109.0'
                        powershell 'docker pull browsers/edge:109.0'
                        powershell 'docker-compose -f web\\src\\test\\resources\\selenoid\\docker-compose.yml up -d'
                        bat 'curl http://localhost:4444/status'
                         }
            }
            stage('test') {
                        steps {
                                bat "./gradlew :web:clean"
                                bat "./gradlew :web:testByXml -Premote=true -PtestXml=${params.testXml} -Pthread=${params.thread} -Pbrowser=${params.browser}"
                        }
            }
     }
      post {
             always {
                 script {
                     powershell 'docker-compose -f web\\src\\test\\resources\\selenoid\\docker-compose.yml down'
                     allure([
                         includeProperties: false,
                         jdk: '',
                         properties: [],
                         reportBuildPolicy: 'ALWAYS',
                         results: [[path: './web/allure-results']]
                         ])
                 }
             }
         }

}